--- arch/arm/boot/compressed/mmcif-sh7372.c	2013-01-04 04:01:38.000000000 -0800
+++ arch/arm/boot/compressed/mmcif-sh7372.c	2013-03-19 04:01:03.000000000 -0700
@@ -28,28 +28,11 @@
 
 #define SMSTPCR3	(void __iomem *)0xe615013c
 
-/* SH7372 specific MMCIF loader
- *
- * loads the zImage from an MMC card starting from block 1.
- *
- * The image must be start with a vrl4 header and
- * the zImage must start at offset 512 of the image. That is,
- * at block 2 (=byte 1024) on the media
- *
- * Use the following line to write the vrl4 formated zImage
- * to an MMC card
- * # dd if=vrl4.out of=/dev/sdx bs=512 seek=1
- */
 asmlinkage void mmc_loader(unsigned char *buf, unsigned long len)
 {
 	mmc_init_progress();
 	mmc_update_progress(MMC_PROGRESS_ENTER);
 
-	/* Initialise MMC
-	 * registers: PORT84CR-PORT92CR
-	 *            (MMCD0_0-MMCD0_7,MMCCMD0 Control)
-	 * value: 0x04 - select function 4
-	 */
 	 __raw_writeb(0x04, PORT84CR);
 	 __raw_writeb(0x04, PORT85CR);
 	 __raw_writeb(0x04, PORT86CR);
@@ -60,28 +43,24 @@
 	 __raw_writeb(0x04, PORT91CR);
 	 __raw_writeb(0x04, PORT92CR);
 
-	/* Initialise MMC
-	 * registers: PORT99CR (MMCCLK0 Control)
-	 * value: 0x10 | 0x04 - enable output | select function 4
-	 */
 	__raw_writeb(0x14, PORT99CR);
 
-	/* Enable clock to MMC hardware block */
+	
 	__raw_writel(__raw_readl(SMSTPCR3) & ~(1 << 12), SMSTPCR3);
 
 	mmc_update_progress(MMC_PROGRESS_INIT);
 
-	/* setup MMCIF hardware */
+	
 	sh_mmcif_boot_init(MMCIF_BASE);
 
 	mmc_update_progress(MMC_PROGRESS_LOAD);
 
-	/* load kernel via MMCIF interface */
-	sh_mmcif_boot_do_read(MMCIF_BASE, 2, /* Kernel is at block 2 */
+	
+	sh_mmcif_boot_do_read(MMCIF_BASE, 2, 
 			      (len + SH_MMCIF_BBS - 1) / SH_MMCIF_BBS, buf);
 
 
-	/* Disable clock to MMC hardware block */
+	
 	__raw_writel(__raw_readl(SMSTPCR3) | (1 << 12), SMSTPCR3);
 
 	mmc_update_progress(MMC_PROGRESS_DONE);
