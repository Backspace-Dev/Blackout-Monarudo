--- sound/usb/card.h	2013-01-04 04:01:37.000000000 -0800
+++ sound/usb/card.h	2013-03-19 04:01:01.000000000 -0700
@@ -50,62 +50,62 @@
 	struct snd_usb_stream *stream;
 	struct usb_device *dev;
 	struct snd_pcm_substream *pcm_substream;
-	int direction;	/* playback or capture */
-	int interface;	/* current interface */
-	int endpoint;	/* assigned endpoint */
-	struct audioformat *cur_audiofmt;	/* current audioformat pointer (for hw_params callback) */
-	unsigned int cur_rate;		/* current rate (for hw_params callback) */
-	unsigned int period_bytes;	/* current period bytes (for hw_params callback) */
-	unsigned int altset_idx;     /* USB data format: index of alternate setting */
-	unsigned int datapipe;   /* the data i/o pipe */
-	unsigned int syncpipe;   /* 1 - async out or adaptive in */
-	unsigned int datainterval;	/* log_2 of data packet interval */
-	unsigned int syncinterval;  /* P for adaptive mode, 0 otherwise */
-	unsigned int freqn;      /* nominal sampling rate in fs/fps in Q16.16 format */
-	unsigned int freqm;      /* momentary sampling rate in fs/fps in Q16.16 format */
-	int          freqshift;  /* how much to shift the feedback value to get Q16.16 */
-	unsigned int freqmax;    /* maximum sampling rate, used for buffer management */
-	unsigned int phase;      /* phase accumulator */
-	unsigned int maxpacksize;	/* max packet size in bytes */
-	unsigned int maxframesize;	/* max packet size in frames */
-	unsigned int curpacksize;	/* current packet size in bytes (for capture) */
-	unsigned int curframesize;	/* current packet size in frames (for capture) */
-	unsigned int syncmaxsize;	/* sync endpoint packet size */
-	unsigned int fill_max: 1;	/* fill max packet size always */
-	unsigned int txfr_quirk:1;	/* allow sub-frame alignment */
-	unsigned int fmt_type;		/* USB audio format type (1-3) */
-
-	unsigned int running: 1;	/* running status */
-
-	unsigned int hwptr_done;	/* processed byte position in the buffer */
-	unsigned int transfer_done;		/* processed frames since last period update */
-	unsigned long active_mask;	/* bitmask of active urbs */
-	unsigned long unlink_mask;	/* bitmask of unlinked urbs */
-
-	unsigned int nurbs;			/* # urbs */
-	struct snd_urb_ctx dataurb[MAX_URBS];	/* data urb table */
-	struct snd_urb_ctx syncurb[SYNC_URBS];	/* sync urb table */
-	char *syncbuf;				/* sync buffer for all sync URBs */
-	dma_addr_t sync_dma;			/* DMA address of syncbuf */
-
-	u64 formats;			/* format bitmasks (all or'ed) */
-	unsigned int num_formats;		/* number of supported audio formats (list) */
-	struct list_head fmt_list;	/* format list */
-	struct snd_pcm_hw_constraint_list rate_list;	/* limited rates */
+	int direction;	
+	int interface;	
+	int endpoint;	
+	struct audioformat *cur_audiofmt;	
+	unsigned int cur_rate;		
+	unsigned int period_bytes;	
+	unsigned int altset_idx;     
+	unsigned int datapipe;   
+	unsigned int syncpipe;   
+	unsigned int datainterval;	
+	unsigned int syncinterval;  
+	unsigned int freqn;      
+	unsigned int freqm;      
+	int          freqshift;  
+	unsigned int freqmax;    
+	unsigned int phase;      
+	unsigned int maxpacksize;	
+	unsigned int maxframesize;	
+	unsigned int curpacksize;	
+	unsigned int curframesize;	
+	unsigned int syncmaxsize;	
+	unsigned int fill_max: 1;	
+	unsigned int txfr_quirk:1;	
+	unsigned int fmt_type;		
+
+	unsigned int running: 1;	
+
+	unsigned int hwptr_done;	
+	unsigned int transfer_done;		
+	unsigned long active_mask;	
+	unsigned long unlink_mask;	
+
+	unsigned int nurbs;			
+	struct snd_urb_ctx dataurb[MAX_URBS];	
+	struct snd_urb_ctx syncurb[SYNC_URBS];	
+	char *syncbuf;				
+	dma_addr_t sync_dma;			
+
+	u64 formats;			
+	unsigned int num_formats;		
+	struct list_head fmt_list;	
+	struct snd_pcm_hw_constraint_list rate_list;	
 	spinlock_t lock;
 
-	struct snd_urb_ops ops;		/* callbacks (must be filled at init) */
-	int last_frame_number;          /* stored frame number */
-	int last_delay;                 /* stored delay */
+	struct snd_urb_ops ops;		
+	int last_frame_number;          
+	int last_delay;                 
 };
 
 struct snd_usb_stream {
 	struct snd_usb_audio *chip;
 	struct snd_pcm *pcm;
 	int pcm_index;
-	unsigned int fmt_type;		/* USB audio format type (1-3) */
+	unsigned int fmt_type;		
 	struct snd_usb_substream substream[2];
 	struct list_head list;
 };
 
-#endif /* __USBAUDIO_CARD_H */
+#endif 
