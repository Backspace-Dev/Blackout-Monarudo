--- kernel/sched/sched.h	2013-01-04 04:01:32.000000000 -0800
+++ kernel/sched/sched.h	2013-03-19 04:00:53.000000000 -0700
@@ -414,21 +302,13 @@
 DECLARE_PER_CPU(struct sched_domain *, sd_llc);
 DECLARE_PER_CPU(int, sd_llc_id);
 
-#endif /* CONFIG_SMP */
+#endif 
 
 #include "stats.h"
 #include "auto_group.h"
 
 #ifdef CONFIG_CGROUP_SCHED
 
-/*
- * Return the group to which this tasks belongs.
- *
- * We use task_subsys_state_check() and extend the RCU verification with
- * pi->lock and rq->lock because cpu_cgroup_attach() holds those locks for each
- * task it moves into the cgroup. Therefore by holding either of those locks,
- * we pin the task to the current cgroup.
- */
 static inline struct task_group *task_group(struct task_struct *p)
 {
 	struct task_group *tg;
