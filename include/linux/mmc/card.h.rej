--- include/linux/mmc/card.h	2013-01-04 04:01:33.000000000 -0800
+++ include/linux/mmc/card.h	2013-03-19 04:00:53.000000000 -0700
@@ -234,102 +215,95 @@
 	bool print_in_read;
 };
 
-/*
- * MMC device
- */
 struct mmc_card {
-	struct mmc_host		*host;		/* the host this device belongs to */
-	struct device		dev;		/* the device */
-	struct device		*mmcblk_dev;/* block device */
-	unsigned int		rca;		/* relative card address of device */
-	unsigned int		type;		/* card type */
-#define MMC_TYPE_MMC		0		/* MMC card */
-#define MMC_TYPE_SD		1		/* SD card */
-#define MMC_TYPE_SDIO		2		/* SDIO card */
-#define MMC_TYPE_SDIO_WIMAX	3		/* SDIO card of WIMAX */
-#define MMC_TYPE_SDIO_SVLTE	4		/* SDIO card of SVLTE*/
-#define MMC_TYPE_SD_COMBO	5		/* SD combo (IO+mem) card */
-#define MMC_TYPE_SDIO_WIFI	6		/* SDIO card of wifi */
-	unsigned int		state;		/* (our) card state */
-#define MMC_STATE_PRESENT	(1<<0)		/* present in sysfs */
-#define MMC_STATE_READONLY	(1<<1)		/* card is read-only */
-#define MMC_STATE_HIGHSPEED	(1<<2)		/* card is in high speed mode */
-#define MMC_STATE_BLOCKADDR	(1<<3)		/* card uses block-addressing */
-#define MMC_STATE_HIGHSPEED_DDR (1<<4)		/* card is in high speed mode */
-#define MMC_STATE_ULTRAHIGHSPEED (1<<5)		/* card is in ultra high speed mode */
-#define MMC_CARD_SDXC		(1<<6)		/* card is SDXC */
-#define MMC_CARD_REMOVED	(1<<7)		/* card has been removed */
-#define MMC_STATE_HIGHSPEED_200	(1<<8)		/* card is in HS200 mode */
-#define MMC_STATE_SLEEP		(1<<9)		/* card is in sleep state */
-#define MMC_STATE_NEED_BKOPS	(1<<10)		/* card need to do BKOPS */
-#define MMC_STATE_DOING_BKOPS	(1<<11)		/* card is doing BKOPS */
-#define MMC_STATE_CHECK_BKOPS	(1<<12)		/* card need to check BKOPS */
-	unsigned int		quirks; 	/* card quirks */
-#define MMC_QUIRK_LENIENT_FN0	(1<<0)		/* allow SDIO FN0 writes outside of the VS CCCR range */
-#define MMC_QUIRK_BLKSZ_FOR_BYTE_MODE (1<<1)	/* use func->cur_blksize */
-						/* for byte mode */
-#define MMC_QUIRK_NONSTD_SDIO	(1<<2)		/* non-standard SDIO card attached */
-						/* (missing CIA registers) */
-#define MMC_QUIRK_BROKEN_CLK_GATING (1<<3)	/* clock gating the sdio bus will make card fail */
-#define MMC_QUIRK_NONSTD_FUNC_IF (1<<4)		/* SDIO card has nonstd function interfaces */
-#define MMC_QUIRK_DISABLE_CD	(1<<5)		/* disconnect CD/DAT[3] resistor */
-#define MMC_QUIRK_INAND_CMD38	(1<<6)		/* iNAND devices have broken CMD38 */
-#define MMC_QUIRK_BLK_NO_CMD23	(1<<7)		/* Avoid CMD23 for regular multiblock */
-#define MMC_QUIRK_BROKEN_BYTE_MODE_512 (1<<8)	/* Avoid sending 512 bytes in */
-#define MMC_QUIRK_LONG_READ_TIME (1<<9)		/* Data read time > CSD says */
-						/* byte mode */
-#define MMC_QUIRK_INAND_DATA_TIMEOUT  (1<<8)    /* For incorrect data timeout */
-	unsigned int    	poweroff_notify_state;	/* eMMC4.5 notify
-							   feature */
+	struct mmc_host		*host;		
+	struct device		dev;		
+	struct device		*mmcblk_dev;
+	unsigned int		rca;		
+	unsigned int		type;		
+#define MMC_TYPE_MMC		0		
+#define MMC_TYPE_SD		1		
+#define MMC_TYPE_SDIO		2		
+#define MMC_TYPE_SDIO_WIMAX	3		
+#define MMC_TYPE_SDIO_SVLTE	4		
+#define MMC_TYPE_SD_COMBO	5		
+#define MMC_TYPE_SDIO_WIFI	6		
+	unsigned int		state;		
+#define MMC_STATE_PRESENT	(1<<0)		
+#define MMC_STATE_READONLY	(1<<1)		
+#define MMC_STATE_HIGHSPEED	(1<<2)		
+#define MMC_STATE_BLOCKADDR	(1<<3)		
+#define MMC_STATE_HIGHSPEED_DDR (1<<4)		
+#define MMC_STATE_ULTRAHIGHSPEED (1<<5)		
+#define MMC_CARD_SDXC		(1<<6)		
+#define MMC_CARD_REMOVED	(1<<7)		
+#define MMC_STATE_HIGHSPEED_200	(1<<8)		
+#define MMC_STATE_SLEEP		(1<<9)		
+#define MMC_STATE_NEED_BKOPS	(1<<10)		
+#define MMC_STATE_DOING_BKOPS	(1<<11)		
+#define MMC_STATE_CHECK_BKOPS	(1<<12)		
+	unsigned int		quirks; 	
+#define MMC_QUIRK_LENIENT_FN0	(1<<0)		
+#define MMC_QUIRK_BLKSZ_FOR_BYTE_MODE (1<<1)	
+						
+#define MMC_QUIRK_NONSTD_SDIO	(1<<2)		
+						
+#define MMC_QUIRK_BROKEN_CLK_GATING (1<<3)	
+#define MMC_QUIRK_NONSTD_FUNC_IF (1<<4)		
+#define MMC_QUIRK_DISABLE_CD	(1<<5)		
+#define MMC_QUIRK_INAND_CMD38	(1<<6)		
+#define MMC_QUIRK_BLK_NO_CMD23	(1<<7)		
+#define MMC_QUIRK_BROKEN_BYTE_MODE_512 (1<<8)	
+#define MMC_QUIRK_LONG_READ_TIME (1<<9)		
+						
+#define MMC_QUIRK_INAND_DATA_TIMEOUT  (1<<8)    
+	unsigned int    	poweroff_notify_state;	
 #define MMC_NO_POWER_NOTIFICATION	0
 #define MMC_POWERED_ON			1
 
-	unsigned int		erase_size;	/* erase size in sectors */
- 	unsigned int		erase_shift;	/* if erase unit is power 2 */
- 	unsigned int		pref_erase;	/* in sectors */
- 	u8			erased_byte;	/* value of erased bytes */
-
-	u32			raw_cid[4];	/* raw card CID */
-	u32			raw_csd[4];	/* raw card CSD */
-	u32			raw_scr[2];	/* raw card SCR */
-	struct mmc_cid		cid;		/* card identification */
-	struct mmc_csd		csd;		/* card specific */
-	struct mmc_ext_csd	ext_csd;	/* mmc v4 extended card specific */
-	struct sd_scr		scr;		/* extra SD information */
-	struct sd_ssr		ssr;		/* yet more SD information */
+	unsigned int		erase_size;	
+ 	unsigned int		erase_shift;	
+ 	unsigned int		pref_erase;	
+ 	u8			erased_byte;	
+
+	u32			raw_cid[4];	
+	u32			raw_csd[4];	
+	u32			raw_scr[2];	
+	struct mmc_cid		cid;		
+	struct mmc_csd		csd;		
+	struct mmc_ext_csd	ext_csd;	
+	struct sd_scr		scr;		
+	struct sd_ssr		ssr;		
 #ifdef CONFIG_MMC_CPRM_SUPPORT
-	/* For [3 party] tony */
-	u32 ccs;								/* if ccs = 0, SDSC, otherwise if ccs = 1, SDHC or SDXC */
-	u32 capacity_of_protected_area_in_byte;	/* the capacity of procted area, see the "struct sd_ssr" */
-	u32 capacity;							/* the capacity of user data area (not include protected area) KB unit*/
-	/* 2012-03-26 */
+	
+	u32 ccs;								
+	u32 capacity_of_protected_area_in_byte;	
+	u32 capacity;							
+	
 #endif
-	struct sd_switch_caps	sw_caps;	/* switch (CMD6) caps */
+	struct sd_switch_caps	sw_caps;	
 
-	unsigned int		sdio_funcs;	/* number of SDIO functions */
-	struct sdio_cccr	cccr;		/* common card info */
-	struct sdio_cis		cis;		/* common tuple info */
-	struct sdio_func	*sdio_func[SDIO_MAX_FUNCS]; /* SDIO functions (devices) */
-	struct sdio_func	*sdio_single_irq; /* SDIO function when only one IRQ active */
-	unsigned		num_info;	/* number of info strings */
-	const char		**info;		/* info strings */
-	struct sdio_func_tuple	*tuples;	/* unknown common tuples */
+	unsigned int		sdio_funcs;	
+	struct sdio_cccr	cccr;		
+	struct sdio_cis		cis;		
+	struct sdio_func	*sdio_func[SDIO_MAX_FUNCS]; 
+	struct sdio_func	*sdio_single_irq; 
+	unsigned		num_info;	
+	const char		**info;		
+	struct sdio_func_tuple	*tuples;	
 
-	unsigned int		sd_bus_speed;	/* Bus Speed Mode set for the card */
+	unsigned int		sd_bus_speed;	
 
 	struct dentry		*debugfs_root;
 	unsigned int		sd_removed;
 	unsigned char		do_remove;
-	struct mmc_part	part[MMC_NUM_PHY_PARTITION]; /* physical partitions */
+	struct mmc_part	part[MMC_NUM_PHY_PARTITION]; 
 	unsigned int    nr_parts;
-	unsigned int		wr_perf; /* write performance in MB/s */
+	unsigned int		wr_perf; 
 
-	struct mmc_wr_pack_stats wr_pack_stats; /* packed commands stats*/
+	struct mmc_wr_pack_stats wr_pack_stats; 
 };
 
-/*
- * This function fill contents in mmc_part.
- */
 static inline void mmc_part_add(struct mmc_card *card, unsigned int size,
 			unsigned int part_cfg, char *name, int idx, bool ro,
 			int area_type)
