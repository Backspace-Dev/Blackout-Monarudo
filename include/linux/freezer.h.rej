--- include/linux/freezer.h	2013-01-04 04:01:30.000000000 -0800
+++ include/linux/freezer.h	2013-03-19 04:00:51.000000000 -0700
@@ -45,59 +33,32 @@
 
 #ifdef CONFIG_CGROUP_FREEZER
 extern bool cgroup_freezing(struct task_struct *task);
-#else /* !CONFIG_CGROUP_FREEZER */
+#else 
 static inline bool cgroup_freezing(struct task_struct *task)
 {
 	return false;
 }
-#endif /* !CONFIG_CGROUP_FREEZER */
+#endif 
 
-/*
- * The PF_FREEZER_SKIP flag should be set by a vfork parent right before it
- * calls wait_for_completion(&vfork) and reset right after it returns from this
- * function.  Next, the parent should call try_to_freeze() to freeze itself
- * appropriately in case the child has exited before the freezing of tasks is
- * complete.  However, we don't want kernel threads to be frozen in unexpected
- * places, so we allow them to block freeze_processes() instead or to set
- * PF_NOFREEZE if needed. Fortunately, in the ____call_usermodehelper() case the
- * parent won't really block freeze_processes(), since ____call_usermodehelper()
- * (the child) does a little before exec/exit and it can't be frozen before
- * waking up the parent.
- */
 
 
-/* Tell the freezer not to count the current task as freezable. */
 static inline void freezer_do_not_count(void)
 {
 	current->flags |= PF_FREEZER_SKIP;
 }
 
-/*
- * Tell the freezer to count the current task as freezable again and try to
- * freeze it.
- */
 static inline void freezer_count(void)
 {
 	current->flags &= ~PF_FREEZER_SKIP;
 	try_to_freeze();
 }
 
-/*
- * Check if the task should be counted as freezable by the freezer
- */
 static inline int freezer_should_skip(struct task_struct *p)
 {
 	return !!(p->flags & PF_FREEZER_SKIP);
 }
 
-/*
- * These macros are intended to be used whenever you want allow a task that's
- * sleeping in TASK_UNINTERRUPTIBLE or TASK_KILLABLE state to be frozen. Note
- * that neither return any clear indication of whether a freeze event happened
- * while in this function.
- */
 
-/* Like schedule(), but should not block the freezer. */
 #define freezable_schedule()						\
 ({									\
 	freezer_do_not_count();						\
