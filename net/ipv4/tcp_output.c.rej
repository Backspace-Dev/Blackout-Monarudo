--- net/ipv4/tcp_output.c	2013-01-04 04:01:31.000000000 -0800
+++ net/ipv4/tcp_output.c	2013-03-19 04:00:51.000000000 -0700
@@ -1257,16 +946,16 @@
 
 	send_win = tcp_wnd_end(tp) - TCP_SKB_CB(skb)->seq;
 
-	/* From in_flight test above, we know that cwnd > in_flight.  */
+	
 	cong_win = (tp->snd_cwnd - in_flight) * tp->mss_cache;
 
 	limit = min(send_win, cong_win);
 
-	/* If a full-sized TSO skb can be sent, do it. */
+	
 	if (limit >= sk->sk_gso_max_size)
 		goto send_now;
 
-	/* Middle in queue won't get any more data, full sendable already? */
+	
 	if ((skb != tcp_write_queue_tail(sk)) && (limit >= skb->len))
 		goto send_now;
 
@@ -1274,23 +963,15 @@
 	if (win_divisor) {
 		u32 chunk = min(tp->snd_wnd, tp->snd_cwnd * tp->mss_cache);
 
-		/* If at least some fraction of a window is available,
-		 * just use it.
-		 */
 		chunk /= win_divisor;
 		if (limit >= chunk)
 			goto send_now;
 	} else {
-		/* Different approach, try not to defer past a single
-		 * ACK.  Receiver should ACK every other full sized
-		 * frame, so if we have space for more than 3 frames
-		 * then send now.
-		 */
 		if (limit > tcp_max_tso_deferred_mss(tp) * tp->mss_cache)
 			goto send_now;
 	}
 
-	/* Ok, it looks like it is advisable to defer.  */
+	
 	tp->tso_deferred = 1 | (jiffies << 1);
 
 	return 1;
